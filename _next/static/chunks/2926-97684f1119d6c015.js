"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[2926],{43197:function(e,t,n){n.d(t,{Z:function(){return s}});var i=n(65055),r=n(23877),a=n(33219);function u(e,t){(0,a.Z)(2,arguments);var n=(0,r.Z)(e),u=(0,i.Z)(t);return isNaN(u)?new Date(NaN):u?(n.setDate(n.getDate()+u),n):n}function o(e,t){(0,a.Z)(2,arguments);var n=(0,r.Z)(e),u=(0,i.Z)(t);if(isNaN(u))return new Date(NaN);if(!u)return n;var o=n.getDate(),s=new Date(n.getTime());s.setMonth(n.getMonth()+u+1,0);var c=s.getDate();return o>=c?s:(n.setFullYear(s.getFullYear(),s.getMonth(),o),n)}function s(e,t){if((0,a.Z)(2,arguments),!t||"object"!==typeof t)return new Date(NaN);var n=t.years?(0,i.Z)(t.years):0,s=t.months?(0,i.Z)(t.months):0,c=t.weeks?(0,i.Z)(t.weeks):0,m=t.days?(0,i.Z)(t.days):0,l=t.hours?(0,i.Z)(t.hours):0,d=t.minutes?(0,i.Z)(t.minutes):0,p=t.seconds?(0,i.Z)(t.seconds):0,g=(0,r.Z)(e),y=s||n?o(g,s+12*n):g,h=m||c?u(y,m+7*c):y,f=d+60*l,w=p+60*f,A=1e3*w,M=new Date(h.getTime()+A);return M}},39787:function(e,t,n){n.d(t,{DA:function(){return N},PN:function(){return O},xO:function(){return x}});var i=n(43231),r=n(57565),a=n(68598),u=n(41300),o=n(52466),s=n(48496),c=n(795).Buffer;const m=(0,o.struct)([(0,o.u8)("instruction")]);function l(e,t=u.H_){const n=[{pubkey:e,isSigner:!1,isWritable:!0}],r=c.alloc(m.span);return m.encode({instruction:s.c.SyncNative},r),new i.TransactionInstruction({keys:n,programId:t,data:r})}var d=n(26786),p=n(87260),g=n(795).Buffer,y=Object.defineProperty,h=Object.defineProperties,f=Object.getOwnPropertyDescriptors,w=Object.getOwnPropertySymbols,A=Object.prototype.hasOwnProperty,M=Object.prototype.propertyIsEnumerable,S=(e,t,n)=>t in e?y(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n,b=(e,t)=>{for(var n in t||(t={}))A.call(t,n)&&S(e,n,t[n]);if(w)for(var n of w(t))M.call(t,n)&&S(e,n,t[n]);return e},P=(e,t)=>h(e,f(t)),I=(e,t,n)=>new Promise(((i,r)=>{var a=e=>{try{o(n.next(e))}catch(t){r(t)}},u=e=>{try{o(n.throw(e))}catch(t){r(t)}},o=e=>e.done?i(e.value):Promise.resolve(e.value).then(a,u);o((n=n.apply(e,t)).next())}));function B(e,t){return I(this,null,(function*(){return BigInt(yield e.getBalance(t))}))}function K(e,t){return I(this,null,(function*(){return BigInt((yield e.getTokenAccountBalance(t)).value.amount)}))}var x={version:"0.1.0",name:"dca",instructions:[{name:"openDca",accounts:[{name:"dca",isMut:!0,isSigner:!1},{name:"user",isMut:!0,isSigner:!0},{name:"inputMint",isMut:!1,isSigner:!1},{name:"outputMint",isMut:!1,isSigner:!1},{name:"userAta",isMut:!0,isSigner:!1},{name:"inAta",isMut:!0,isSigner:!1},{name:"outAta",isMut:!0,isSigner:!1},{name:"systemProgram",isMut:!1,isSigner:!1},{name:"tokenProgram",isMut:!1,isSigner:!1},{name:"associatedTokenProgram",isMut:!1,isSigner:!1},{name:"eventAuthority",isMut:!1,isSigner:!1},{name:"program",isMut:!1,isSigner:!1}],args:[{name:"applicationIdx",type:"u64"},{name:"inAmount",type:"u64"},{name:"inAmountPerCycle",type:"u64"},{name:"cycleFrequency",type:"i64"},{name:"minPrice",type:{option:"u64"}},{name:"maxPrice",type:{option:"u64"}},{name:"startAt",type:{option:"i64"}},{name:"closeWsolInAta",type:{option:"bool"}}]},{name:"openDcaV2",accounts:[{name:"dca",isMut:!0,isSigner:!1},{name:"user",isMut:!1,isSigner:!0},{name:"payer",isMut:!0,isSigner:!0},{name:"inputMint",isMut:!1,isSigner:!1},{name:"outputMint",isMut:!1,isSigner:!1},{name:"userAta",isMut:!0,isSigner:!1},{name:"inAta",isMut:!0,isSigner:!1},{name:"outAta",isMut:!0,isSigner:!1},{name:"systemProgram",isMut:!1,isSigner:!1},{name:"tokenProgram",isMut:!1,isSigner:!1},{name:"associatedTokenProgram",isMut:!1,isSigner:!1},{name:"eventAuthority",isMut:!1,isSigner:!1},{name:"program",isMut:!1,isSigner:!1}],args:[{name:"applicationIdx",type:"u64"},{name:"inAmount",type:"u64"},{name:"inAmountPerCycle",type:"u64"},{name:"cycleFrequency",type:"i64"},{name:"minPrice",type:{option:"u64"}},{name:"maxPrice",type:{option:"u64"}},{name:"startAt",type:{option:"i64"}}]},{name:"closeDca",accounts:[{name:"user",isMut:!0,isSigner:!0},{name:"dca",isMut:!0,isSigner:!1},{name:"inputMint",isMut:!1,isSigner:!1},{name:"outputMint",isMut:!1,isSigner:!1},{name:"inAta",isMut:!0,isSigner:!1},{name:"outAta",isMut:!0,isSigner:!1},{name:"userInAta",isMut:!0,isSigner:!1},{name:"userOutAta",isMut:!0,isSigner:!1},{name:"systemProgram",isMut:!1,isSigner:!1},{name:"tokenProgram",isMut:!1,isSigner:!1},{name:"associatedTokenProgram",isMut:!1,isSigner:!1},{name:"eventAuthority",isMut:!1,isSigner:!1},{name:"program",isMut:!1,isSigner:!1}],args:[]},{name:"withdraw",accounts:[{name:"user",isMut:!0,isSigner:!0},{name:"dca",isMut:!0,isSigner:!1},{name:"inputMint",isMut:!1,isSigner:!1},{name:"outputMint",isMut:!1,isSigner:!1},{name:"dcaAta",isMut:!0,isSigner:!1},{name:"userInAta",isMut:!0,isSigner:!1,isOptional:!0},{name:"userOutAta",isMut:!0,isSigner:!1,isOptional:!0},{name:"systemProgram",isMut:!1,isSigner:!1},{name:"tokenProgram",isMut:!1,isSigner:!1},{name:"associatedTokenProgram",isMut:!1,isSigner:!1},{name:"eventAuthority",isMut:!1,isSigner:!1},{name:"program",isMut:!1,isSigner:!1}],args:[{name:"withdrawParams",type:{defined:"WithdrawParams"}}]},{name:"deposit",accounts:[{name:"user",isMut:!0,isSigner:!0},{name:"dca",isMut:!0,isSigner:!1},{name:"inAta",isMut:!0,isSigner:!1},{name:"userInAta",isMut:!0,isSigner:!1},{name:"tokenProgram",isMut:!1,isSigner:!1},{name:"eventAuthority",isMut:!1,isSigner:!1},{name:"program",isMut:!1,isSigner:!1}],args:[{name:"depositIn",type:"u64"}]},{name:"withdrawFees",accounts:[{name:"admin",isMut:!0,isSigner:!0},{name:"mint",isMut:!1,isSigner:!1},{name:"feeAuthority",isMut:!1,isSigner:!1,docs:["CHECK"]},{name:"programFeeAta",isMut:!0,isSigner:!1},{name:"adminFeeAta",isMut:!0,isSigner:!1},{name:"systemProgram",isMut:!1,isSigner:!1},{name:"tokenProgram",isMut:!1,isSigner:!1},{name:"associatedTokenProgram",isMut:!1,isSigner:!1}],args:[{name:"amount",type:"u64"}]},{name:"initiateFlashFill",accounts:[{name:"keeper",isMut:!0,isSigner:!0},{name:"dca",isMut:!0,isSigner:!1},{name:"inputMint",isMut:!1,isSigner:!1,docs:["The token to borrow"]},{name:"keeperInAta",isMut:!0,isSigner:!1,docs:["The account to send borrowed tokens to"]},{name:"inAta",isMut:!0,isSigner:!1,docs:["The account to borrow from"]},{name:"outAta",isMut:!1,isSigner:!1,docs:["The account to repay to"]},{name:"instructionsSysvar",isMut:!1,isSigner:!1,docs:["Solana Instructions Sysvar"]},{name:"systemProgram",isMut:!1,isSigner:!1},{name:"tokenProgram",isMut:!1,isSigner:!1},{name:"associatedTokenProgram",isMut:!1,isSigner:!1}],args:[]},{name:"fulfillFlashFill",accounts:[{name:"keeper",isMut:!0,isSigner:!0},{name:"dca",isMut:!0,isSigner:!1},{name:"inputMint",isMut:!1,isSigner:!1},{name:"outputMint",isMut:!1,isSigner:!1},{name:"keeperInAta",isMut:!1,isSigner:!1},{name:"inAta",isMut:!1,isSigner:!1},{name:"outAta",isMut:!1,isSigner:!1},{name:"feeAuthority",isMut:!1,isSigner:!1,docs:["CHECK"]},{name:"feeAta",isMut:!0,isSigner:!1},{name:"instructionsSysvar",isMut:!1,isSigner:!1,docs:["Solana Instructions Sysvar"]},{name:"systemProgram",isMut:!1,isSigner:!1},{name:"tokenProgram",isMut:!1,isSigner:!1},{name:"associatedTokenProgram",isMut:!1,isSigner:!1},{name:"eventAuthority",isMut:!1,isSigner:!1},{name:"program",isMut:!1,isSigner:!1}],args:[{name:"repayAmount",type:"u64"}]},{name:"transfer",accounts:[{name:"keeper",isMut:!0,isSigner:!0},{name:"dca",isMut:!0,isSigner:!1},{name:"user",isMut:!0,isSigner:!1},{name:"outputMint",isMut:!1,isSigner:!1},{name:"dcaOutAta",isMut:!0,isSigner:!1},{name:"userOutAta",isMut:!0,isSigner:!1,isOptional:!0},{name:"intermediateAccount",isMut:!0,isSigner:!1,isOptional:!0},{name:"systemProgram",isMut:!1,isSigner:!1},{name:"tokenProgram",isMut:!1,isSigner:!1},{name:"associatedTokenProgram",isMut:!1,isSigner:!1},{name:"eventAuthority",isMut:!1,isSigner:!1},{name:"program",isMut:!1,isSigner:!1}],args:[]},{name:"endAndClose",accounts:[{name:"keeper",isMut:!0,isSigner:!0},{name:"dca",isMut:!0,isSigner:!1},{name:"inputMint",isMut:!1,isSigner:!1},{name:"outputMint",isMut:!1,isSigner:!1},{name:"inAta",isMut:!0,isSigner:!1},{name:"outAta",isMut:!0,isSigner:!1},{name:"user",isMut:!0,isSigner:!1},{name:"userOutAta",isMut:!0,isSigner:!1,isOptional:!0},{name:"initUserOutAta",isMut:!0,isSigner:!1,isOptional:!0},{name:"intermediateAccount",isMut:!0,isSigner:!1,isOptional:!0},{name:"systemProgram",isMut:!1,isSigner:!1},{name:"tokenProgram",isMut:!1,isSigner:!1},{name:"associatedTokenProgram",isMut:!1,isSigner:!1},{name:"eventAuthority",isMut:!1,isSigner:!1},{name:"program",isMut:!1,isSigner:!1}],args:[]}],accounts:[{name:"dca",type:{kind:"struct",fields:[{name:"user",type:"publicKey"},{name:"inputMint",type:"publicKey"},{name:"outputMint",type:"publicKey"},{name:"idx",type:"u64"},{name:"nextCycleAt",type:"i64"},{name:"inDeposited",type:"u64"},{name:"inWithdrawn",type:"u64"},{name:"outWithdrawn",type:"u64"},{name:"inUsed",type:"u64"},{name:"outReceived",type:"u64"},{name:"inAmountPerCycle",type:"u64"},{name:"cycleFrequency",type:"i64"},{name:"nextCycleAmountLeft",type:"u64"},{name:"inAccount",type:"publicKey"},{name:"outAccount",type:"publicKey"},{name:"minOutAmount",type:"u64"},{name:"maxOutAmount",type:"u64"},{name:"keeperInBalanceBeforeBorrow",type:"u64"},{name:"dcaOutBalanceBeforeSwap",type:"u64"},{name:"createdAt",type:"i64"},{name:"bump",type:"u8"}]}}],types:[{name:"WithdrawParams",type:{kind:"struct",fields:[{name:"withdrawAmount",type:"u64"},{name:"withdrawal",type:{defined:"Withdrawal"}}]}},{name:"Withdrawal",type:{kind:"enum",variants:[{name:"In"},{name:"Out"}]}}],events:[{name:"CollectedFee",fields:[{name:"userKey",type:"publicKey",index:!1},{name:"dcaKey",type:"publicKey",index:!1},{name:"mint",type:"publicKey",index:!1},{name:"amount",type:"u64",index:!1}]},{name:"Filled",fields:[{name:"userKey",type:"publicKey",index:!1},{name:"dcaKey",type:"publicKey",index:!1},{name:"inputMint",type:"publicKey",index:!1},{name:"outputMint",type:"publicKey",index:!1},{name:"inAmount",type:"u64",index:!1},{name:"outAmount",type:"u64",index:!1},{name:"feeMint",type:"publicKey",index:!1},{name:"fee",type:"u64",index:!1}]},{name:"Opened",fields:[{name:"userKey",type:"publicKey",index:!1},{name:"dcaKey",type:"publicKey",index:!1},{name:"inDeposited",type:"u64",index:!1},{name:"inputMint",type:"publicKey",index:!1},{name:"outputMint",type:"publicKey",index:!1},{name:"cycleFrequency",type:"i64",index:!1},{name:"inAmountPerCycle",type:"u64",index:!1},{name:"createdAt",type:"i64",index:!1}]},{name:"Closed",fields:[{name:"userKey",type:"publicKey",index:!1},{name:"dcaKey",type:"publicKey",index:!1},{name:"inDeposited",type:"u64",index:!1},{name:"inputMint",type:"publicKey",index:!1},{name:"outputMint",type:"publicKey",index:!1},{name:"cycleFrequency",type:"i64",index:!1},{name:"inAmountPerCycle",type:"u64",index:!1},{name:"createdAt",type:"i64",index:!1},{name:"totalInWithdrawn",type:"u64",index:!1},{name:"totalOutWithdrawn",type:"u64",index:!1},{name:"unfilledAmount",type:"u64",index:!1},{name:"userClosed",type:"bool",index:!1}]},{name:"Withdraw",fields:[{name:"dcaKey",type:"publicKey",index:!1},{name:"inAmount",type:"u64",index:!1},{name:"outAmount",type:"u64",index:!1},{name:"userWithdraw",type:"bool",index:!1}]},{name:"Deposit",fields:[{name:"dcaKey",type:"publicKey",index:!1},{name:"amount",type:"u64",index:!1}]}],errors:[{code:6e3,name:"InvalidAmount",msg:"Invalid deposit amount"},{code:6001,name:"InvalidCycleAmount",msg:"Invalid deposit amount"},{code:6002,name:"InvalidPair",msg:"Invalid pair"},{code:6003,name:"TooFrequent",msg:"Too frequent DCA cycle"},{code:6004,name:"InvalidMinPrice",msg:"Minimum price constraint must be greater than 0"},{code:6005,name:"InvalidMaxPrice",msg:"Maximum price constraint must be greater than 0"},{code:6006,name:"InAmountInsufficient",msg:"In amount needs to be more than in amount per cycle"},{code:6007,name:"Unauthorized",msg:"Wrong user"},{code:6008,name:"NoInATA",msg:"inAta not passed in"},{code:6009,name:"NoUserInATA",msg:"userInAta not passed in"},{code:6010,name:"NoOutATA",msg:"outAta not passed in"},{code:6011,name:"NoUserOutATA",msg:"userOutAta not passed in"},{code:6012,name:"InsufficientBalanceInProgram",msg:"Trying to withdraw more than available"},{code:6013,name:"InvalidDepositAmount",msg:"Deposit should be more than 0"},{code:6014,name:"UserInsufficientBalance",msg:"User has insufficient balance"},{code:6015,name:"UnauthorizedKeeper",msg:"Unauthorized Keeper"},{code:6016,name:"UnrecognizedProgram",msg:"Unrecognized Program"},{code:6017,name:"MathErrors",msg:"Calculation errors"},{code:6018,name:"KeeperNotTimeToFill",msg:"Not time to fill"},{code:6019,name:"OrderFillAmountWrong",msg:"Order amount wrong"},{code:6020,name:"SwapOutAmountBelowMinimum",msg:"Out amount below expectations"},{code:6021,name:"WrongAdmin",msg:"Wrong admin"},{code:6022,name:"MathOverflow",msg:"Overflow in arithmetic operation"},{code:6023,name:"AddressMismatch",msg:"Address Mismatch"},{code:6024,name:"ProgramMismatch",msg:"Program Mismatch"},{code:6025,name:"IncorrectRepaymentAmount",msg:"Incorrect Repayment Amount"},{code:6026,name:"CannotBorrowBeforeRepay",msg:"Cannot Borrow Before Repay"},{code:6027,name:"NoRepaymentInstructionFound",msg:"No Repayment Found"},{code:6028,name:"MissingSwapInstructions",msg:"Missing Swap Instruction"},{code:6029,name:"UnexpectedSwapProgram",msg:"Expected Instruction to use Jupiter Swap Program"},{code:6030,name:"UnknownInstruction",msg:"Unknown Instruction"},{code:6031,name:"MissingRepayInstructions",msg:"Missing Repay Instruction"},{code:6032,name:"KeeperShortchanged",msg:"Keeper Shortchanged"},{code:6033,name:"WrongSwapOutAccount",msg:"Jup Swap to Wrong Out Account"},{code:6034,name:"WrongTransferAmount",msg:"Transfer amount should be exactly account balance"},{code:6035,name:"InsufficientBalanceForRent",msg:"Insufficient balance for rent"},{code:6036,name:"UnexpectedSolBalance",msg:"Unexpected SOL amount in intermediate account"},{code:6037,name:"InsufficientWsolForTransfer",msg:"Too little WSOL to perform transfer"},{code:6038,name:"MissedInstruction",msg:"Did not call initiate_flash_fill"},{code:6039,name:"WrongProgram",msg:"Did not call this program's initiate_flash_fill"},{code:6040,name:"BalanceNotZero",msg:"Can't close account with balance"},{code:6041,name:"UnexpectedWSOLLeftover",msg:"Should not have WSOL leftover in DCA out-token account"},{code:6042,name:"IntermediateAccountNotSet",msg:"Should pass in a WSOL intermediate account when transferring SOL"},{code:6043,name:"UnexpectedSwapInstruction",msg:"Did not call jup swap"}]},O={testnet:new i.PublicKey("devBa82xDUtHW6hVF27uCFCf6hmV323aJg1Qf9bgwWf"),devnet:new i.PublicKey("Betam4GuxvAes2uQ5vX8SackcxL5pxRuHowM5m2Ykmcq"),"mainnet-beta":new i.PublicKey("DCA265Vj8a9CEuX1eb1LWRnDT7uK6q1xMipnNyatn23M")},v=(new i.PublicKey("JUP4Fb2cqiRUcaTHdrPC8h2gNsA2ETXiPDD33WcGuJB"),(e,t,n,...i)=>I(void 0,[e,t,n,...i],(function*(e,t,n,i=n,r=!0){try{const u=yield(0,a.Am)(t,n,r);if(yield e.getAccountInfo(u))return{ataPubKey:u,ix:void 0};return{ataPubKey:u,ix:(0,p.E)(i,u,n,t)}}catch(u){throw console.error("Error::getOrCreateATAInstruction",u),u}}))),N=class{constructor(e,t="mainnet-beta",n){this.connection=e;const i=new r.Y7(e,{},r.Y7.defaultOptions());this.program=new r.$r(x,null!=n?n:O[t],i)}getDcaPubKey(e,t,n,r){const a=r.toArrayLike(g,"le",8),[u]=i.PublicKey.findProgramAddressSync([g.from("dca"),e.toBuffer(),t.toBuffer(),n.toBuffer(),a],this.program.programId);return u}fetchDCA(e){return I(this,null,(function*(){const t=yield this.program.account.dca.fetch(e);return P(b({},t),{inBalance:t.inDeposited.sub(t.inUsed).sub(t.inWithdrawn),outBalance:t.outReceived.sub(t.outReceived)})}))}createDCA(e){return I(this,null,(function*(){let{user:t,inAmount:n,inAmountPerCycle:o,cycleSecondsApart:s,inputMint:c,outputMint:m,minOutAmountPerCycle:l,maxOutAmountPerCycle:d,startAt:p,userInTokenAccount:g}=e;if(n<o)throw new Error("inAmount must be greater than inAmountPerCycle");if(BigInt(s.toString())<BigInt(30))throw new Error("cycleSecondsApart must be at least 30 seconds");if(l&&d&&BigInt(l.toString())>BigInt(d.toString()))throw new Error("minOutAmountPerCycle must be less than maxOutAmountPerCycle");if(t=new i.PublicKey(t),c=new i.PublicKey(c),m=new i.PublicKey(m),g||(g=(0,a.MO)(c,t,!0)),c.equals(u.Gd)&&new r.BN((yield B(this.connection,t)).toString())<n)throw new Error("User does not have sufficient inputMint");if(!c.equals(u.Gd)&&new r.BN((yield K(this.connection,g)).toString())<n)throw new Error("User does not have sufficient inputMint");return this._createDCA(t,g,n,o,s,c,m,l,d,p)}))}_createDCA(e,t,n,i,o,s,c,m=null,d=null,p=null){return I(this,null,(function*(){const g=[];let y=!1;if(s.equals(u.Gd)){const{ataPubKey:t,ix:i}=yield v(this.connection,s,e),a=r.rV.SystemProgram.transfer({fromPubkey:e,lamports:new r.BN(n.toString()).toNumber(),toPubkey:t}),u=l(t);i&&(y=!0,g.push(i)),g.push(a),g.push(u)}if(!c.equals(u.Gd)){const{ataPubKey:t,ix:n}=yield v(this.connection,c,e);n&&g.push(n)}const h=new r.BN(parseInt((Date.now()/1e3).toString())),f=yield this.getDcaPubKey(e,s,c,h);return{tx:yield this.program.methods.openDca(h,new r.BN(n.toString()),new r.BN(i.toString()),new r.BN(o.toString()),m?new r.BN(m.toString()):new r.BN(0),d?new r.BN(d.toString()):new r.BN(0),p?new r.BN(p.toString()):new r.BN(0),y).accounts({user:e,dca:f,inputMint:s,outputMint:c,userAta:t,inAta:(0,a.MO)(s,f,!0),outAta:(0,a.MO)(c,f,!0)}).preInstructions(g).transaction(),dcaPubKey:f}}))}createDcaV2(e,t=!1,n){return I(this,null,(function*(){let{payer:o,user:s,inAmount:c,inAmountPerCycle:m,cycleSecondsApart:l,inputMint:d,outputMint:p,minOutAmountPerCycle:g,maxOutAmountPerCycle:y,startAt:h,userInTokenAccount:f}=e;if(c<m)throw new Error("inAmount must be greater than inAmountPerCycle");if(BigInt(l.toString())<BigInt(30))throw new Error("cycleSecondsApart must be at least 30 seconds");if(g&&y&&BigInt(g.toString())>BigInt(y.toString()))throw new Error("minOutAmountPerCycle must be less than maxOutAmountPerCycle");if(o=new i.PublicKey(o),s=new i.PublicKey(s),d=new i.PublicKey(d),p=new i.PublicKey(p),f||(f=(0,a.MO)(d,s,!0)),!t){if(d.equals(u.Gd)&&new r.BN((yield B(this.connection,s)).toString())<c)throw new Error("User does not have sufficient inputMint");if(!d.equals(u.Gd)&&(yield K(this.connection,f))<BigInt(c.toString()))throw new Error("User does not have sufficient inputMint")}return this._createDCAV2(o,s,f,c,m,l,d,p,g,y,h,n)}))}_createDCAV2(e,t,n,i,o,s,c,m,g=null,y=null,h=null,f){return I(this,null,(function*(){const w=[],A=[];if(c.equals(u.Gd)){const{ataPubKey:e,ix:n}=yield v(this.connection,c,t),a=r.rV.SystemProgram.transfer({fromPubkey:t,lamports:new r.BN(i.toString()).toNumber(),toPubkey:e}),u=l(e);n&&(w.push(n),A.push((0,d.Zu)(e,t,t))),w.push(a),w.push(u)}if(!m.equals(u.Gd))if(!1===f)w.push((0,p.E)(t,(0,a.MO)(m,t,!0),t,m));else if(!f){const{ix:e}=yield v(this.connection,m,t);e&&w.push(e)}const M=new r.BN(parseInt((Date.now()/1e3).toString())),S=yield this.getDcaPubKey(t,c,m,M);return{tx:yield this.program.methods.openDcaV2(M,new r.BN(i.toString()),new r.BN(o.toString()),new r.BN(s.toString()),g?new r.BN(g.toString()):new r.BN(0),y?new r.BN(y.toString()):new r.BN(0),h?new r.BN(h.toString()):new r.BN(0)).accounts({dca:S,user:t,payer:e,inputMint:c,outputMint:m,userAta:n,inAta:(0,a.MO)(c,S,!0),outAta:(0,a.MO)(m,S,!0)}).preInstructions(w).postInstructions(A).transaction(),dcaPubKey:S}}))}closeDCA(e){return I(this,arguments,(function*({user:e,dca:t}){e=new i.PublicKey(e),t=new i.PublicKey(t);const n=yield this.fetchDCA(t),r=n.inputMint,u=n.outputMint,o=(0,a.MO)(r,e,!0),s=(0,a.MO)(u,e,!0),c=(0,a.MO)(r,t,!0),m=(0,a.MO)(u,t,!0);return this._closeDCA(e,t,r,u,o,s,c,m)}))}_closeDCA(e,t,n,i,r,a,o,s){return I(this,null,(function*(){const c=[];n.equals(u.Gd)&&c.push((0,d.Zu)(r,e,e)),i.equals(u.Gd)&&c.push((0,d.Zu)(a,e,e));return{tx:yield this.program.methods.closeDca().accounts({user:e,dca:t,inputMint:n,outputMint:i,inAta:o,outAta:s,userInAta:r,userOutAta:a}).postInstructions(c).transaction()}}))}deposit(e){return I(this,null,(function*(){let{user:t,dca:n,amount:u}=e;t=new i.PublicKey(t),n=new i.PublicKey(n);const o=yield this.fetchDCA(n),s=(0,a.MO)(o.inputMint,t,!1),c=(0,a.MO)(o.inputMint,n,!0);return u=new r.BN(u.toString()),this._deposit(t,n,o.inputMint,s,c,u)}))}_deposit(e,t,n,i,a,o){return I(this,null,(function*(){const s=[];if(n.equals(u.Gd)){const{ataPubKey:t,ix:i}=yield v(this.connection,n,e),a=r.rV.SystemProgram.transfer({fromPubkey:e,lamports:new r.BN(o.toString()).toNumber(),toPubkey:t}),u=l(t);i&&s.push(i),s.push(a),s.push(u)}return{tx:yield this.program.methods.deposit(o).accounts({user:e,dca:t,userInAta:i,inAta:a}).preInstructions(s).transaction()}}))}withdraw(e){return I(this,arguments,(function*({user:e,dca:t,inputMint:n,outputMint:u,withdrawInAmount:o,withdrawOutAmount:s}){if(e=new i.PublicKey(e),t=new i.PublicKey(t),!n||!u)throw new Error("Need to supply at least input mint or output mint or both");if(n&&!o)throw new Error("withdrawInAmount not supplied");if(u&&!s)throw new Error("withdrawOutAmount not supplied");const c=yield this.fetchDCA(t);if(o&&!new i.PublicKey(n).equals(c.inputMint))throw new Error("Wrong inputMint supplied");if(s&&!new i.PublicKey(u).equals(c.outputMint))throw new Error("Wrong outputMint supplied");const m=(0,a.MO)(c.inputMint,t,!0),l=(0,a.MO)(c.outputMint,t,!0),d=(0,a.MO)(c.inputMint,e,!1),p=(0,a.MO)(c.outputMint,e,!1);return o=o?new r.BN(o.toString()):new r.BN(0),s=s?new r.BN(s.toString()):new r.BN(0),n=c.inputMint,u=c.outputMint,this._withdraw(e,t,n,u,m,l,d,p,o,s)}))}_withdraw(e,t,n,i,a,o,s,c,m,l){return I(this,null,(function*(){const p={in:{}},g={out:{}};let y;const h=[];if(n&&m&&n.equals(u.Gd)){if(!s)throw new Error("userInAta not supplied");h.push((0,d.Zu)(s,e,e))}if(i&&l&&i.equals(u.Gd)){if(!c)throw new Error("userOutAta not supplied");h.push((0,d.Zu)(c,e,e))}if(m.gt(new r.BN(0))&&l.gt(new r.BN(0))){const r={withdrawAmount:m,withdrawal:p},u=yield this.program.methods.withdraw(r).accounts({user:e,dca:t,inputMint:n,outputMint:i,dcaAta:a,userInAta:s,userOutAta:c}).instruction(),d={withdrawAmount:l,withdrawal:g};y=yield this.program.methods.withdraw(d).accounts({user:e,dca:t,inputMint:n,outputMint:i,dcaAta:o,userInAta:s,userOutAta:c}).preInstructions([u]).postInstructions(h).transaction()}else if(m.gt(new r.BN(0))){const r={withdrawAmount:m,withdrawal:p};y=yield this.program.methods.withdraw(r).accounts({user:e,dca:t,inputMint:n,outputMint:i,dcaAta:a,userInAta:s,userOutAta:c}).postInstructions(h).transaction()}else{if(!l.gt(new r.BN(0)))throw new Error("Unexpected error - no amount specified for withdrawal");{const r={withdrawAmount:l,withdrawal:g};y=yield this.program.methods.withdraw(r).accounts({user:e,dca:t,inputMint:n,outputMint:i,dcaAta:o,userInAta:s,userOutAta:c}).postInstructions(h).transaction()}}return{tx:y}}))}getAll(){return I(this,null,(function*(){return this.program.account.dca.all()}))}getCurrentByUser(e,t,n){return I(this,null,(function*(){const i=yield this.program.account.dca.all([{memcmp:{offset:8,bytes:e.toBase58()}}]);return t&&n?i.filter((e=>e.account.inputMint.equals(t)||e.account.outputMint.equals(n))):t?(console.log("has input mint"),i.filter((e=>e.account.inputMint.equals(t)))):n?i.filter((e=>e.account.outputMint.equals(n))):i}))}getClosedByUser(e,t,n,a,u){return I(this,null,(function*(){let o=`https://dca-api.jup.ag/user/${e.toString()}/dca?status=1`;a&&(o+=`&input-mint=${a.toBase58()}`),u&&(o+=`&output-mint=${u.toBase58()}`),t&&(o+=`&before=${t.toISOString()}`),n&&(o+=`&limit=${n}`);const s=yield fetch(o);return(yield s.json()).data.dcaAccounts.map((e=>{let t=[];return e.fills.forEach((e=>{t.push({userKey:new i.PublicKey(e.userKey),dcaKey:new i.PublicKey(e.dcaKey),inputMint:new i.PublicKey(e.inputMint),outputMint:new i.PublicKey(e.inputMint),inAmount:e.inAmount,outAmount:e.outAmount,feeMint:new i.PublicKey(e.feeMint),fee:e.fee,txId:e.txId,confirmedAt:new Date(Date.parse(e.confirmedAt))})})),{publicKey:new i.PublicKey(e.dcaKey),account:{createdAt:new r.BN(Math.floor(Date.parse(e.createdAt)/1e3)),updatedAt:new r.BN(Math.floor(Date.parse(e.updatedAt)/1e3)),user:new i.PublicKey(e.userKey),inputMint:new i.PublicKey(e.inputMint),outputMint:new i.PublicKey(e.outputMint),inDeposited:new r.BN(e.inDeposited),inAmountPerCycle:new r.BN(e.inAmountPerCycle),cycleFrequency:new r.BN(e.cycleFrequency),inFilled:new r.BN(e.inDeposited).sub(new r.BN(e.inWithdrawn)),outReceived:new r.BN(e.outWithdrawn),inWithdrawn:new r.BN(e.inWithdrawn),outWithdrawn:new r.BN(e.outWithdrawn),unfilledAmount:new r.BN(e.unfilledAmount),closeTxHash:e.closeTxHash,openTxHash:e.openTxHash,status:e.status,userClosed:e.userClosed},fills:t}}))}))}getBalancesByAccount(e){return I(this,null,(function*(){const t=yield this.fetchDCA(e),n=yield(0,a.ih)(this.connection,t.inputMint),i=yield K(this.connection,t.inAccount),r=yield(0,a.ih)(this.connection,t.outputMint),u=yield K(this.connection,t.outAccount);return{in:P(b({},n),{dcaInAta:t.inAccount,dcaBalance:i}),out:P(b({},r),{dcaOutAta:t.outAccount,dcaBalance:u}),stats:{inDeposited:BigInt(t.inDeposited.toString()),inWithdrawn:BigInt(t.inWithdrawn.toString()),outWithdrawn:BigInt(t.outWithdrawn.toString()),inUsed:BigInt(t.inUsed.toString()),outReceived:BigInt(t.outReceived.toString())}}}))}withdrawFees(e){return I(this,arguments,(function*({admin:e,mint:t,amount:n}){e=new i.PublicKey(e),t=new i.PublicKey(t),n=new r.BN(n.toString());let[u]=yield i.PublicKey.findProgramAddressSync([g.from("fee")],this.program.programId);const o=(0,a.MO)(t,u,!0),s=(0,a.MO)(t,e,!1);return{tx:yield this.program.methods.withdrawFees(new r.BN(n.toString())).accounts({admin:e,mint:t,feeAuthority:u,programFeeAta:o,adminFeeAta:s}).transaction()}}))}getFillHistory(e){return I(this,null,(function*(){try{e=e.toString();const t=yield fetch(`https://dca-api.jup.ag/dca/${e}/fills`);return(yield t.json()).data.fills.map((e=>({userKey:new i.PublicKey(e.userKey),dcaKey:new i.PublicKey(e.dcaKey),inputMint:new i.PublicKey(e.inputMint),outputMint:new i.PublicKey(e.outputMint),inAmount:e.inAmount,outAmount:e.outAmount,feeMint:new i.PublicKey(e.feeMint),fee:e.fee,txId:e.txId,confirmedAt:new Date(1e3*e.confirmedAt)})))}catch(t){return console.error(t),[]}}))}getAvailableTokens(){return I(this,null,(function*(){const e=yield fetch("https://cache.jup.ag/top-tokens");return(yield e.json()).map((e=>new i.PublicKey(e)))}))}}},41300:function(e,t,n){n.d(t,{Gd:function(){return u},H_:function(){return r},_u:function(){return a}});var i=n(43231);const r=new i.PublicKey("TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA"),a=(new i.PublicKey("TokenzQdBNbLqP5VEhdkAS6EPFLC1PHnBqCXEpPxuEb"),new i.PublicKey("ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL")),u=new i.PublicKey("So11111111111111111111111111111111111111112");new i.PublicKey("9pan9bMn5HatX4EJdBwg9VgCa7Uz5HL8N1m5D3NdXejP")},87260:function(e,t,n){n.d(t,{E:function(){return u}});var i=n(43231),r=n(41300),a=n(795).Buffer;function u(e,t,n,u,o=r.H_,s=r._u){const c=[{pubkey:e,isSigner:!0,isWritable:!0},{pubkey:t,isSigner:!1,isWritable:!0},{pubkey:n,isSigner:!1,isWritable:!1},{pubkey:u,isSigner:!1,isWritable:!1},{pubkey:i.SystemProgram.programId,isSigner:!1,isWritable:!1},{pubkey:o,isSigner:!1,isWritable:!1}];return new i.TransactionInstruction({keys:c,programId:s,data:a.alloc(0)})}},26786:function(e,t,n){n.d(t,{Zu:function(){return c}});var i=n(52466),r=n(43231),a=n(41300);var u=n(48496),o=n(795).Buffer;const s=(0,i.struct)([(0,i.u8)("instruction")]);function c(e,t,n,i=[],c=a.H_){const m=function(e,t,n){if(n.length){e.push({pubkey:t,isSigner:!1,isWritable:!1});for(const t of n)e.push({pubkey:t.publicKey,isSigner:!0,isWritable:!1})}else e.push({pubkey:t,isSigner:!0,isWritable:!1});return e}([{pubkey:e,isSigner:!1,isWritable:!0},{pubkey:t,isSigner:!1,isWritable:!0}],n,i),l=o.alloc(s.span);return s.encode({instruction:u.c.CloseAccount},l),new r.TransactionInstruction({keys:m,programId:c,data:l})}},48496:function(e,t,n){var i;n.d(t,{c:function(){return i}}),function(e){e[e.InitializeMint=0]="InitializeMint",e[e.InitializeAccount=1]="InitializeAccount",e[e.InitializeMultisig=2]="InitializeMultisig",e[e.Transfer=3]="Transfer",e[e.Approve=4]="Approve",e[e.Revoke=5]="Revoke",e[e.SetAuthority=6]="SetAuthority",e[e.MintTo=7]="MintTo",e[e.Burn=8]="Burn",e[e.CloseAccount=9]="CloseAccount",e[e.FreezeAccount=10]="FreezeAccount",e[e.ThawAccount=11]="ThawAccount",e[e.TransferChecked=12]="TransferChecked",e[e.ApproveChecked=13]="ApproveChecked",e[e.MintToChecked=14]="MintToChecked",e[e.BurnChecked=15]="BurnChecked",e[e.InitializeAccount2=16]="InitializeAccount2",e[e.SyncNative=17]="SyncNative",e[e.InitializeAccount3=18]="InitializeAccount3",e[e.InitializeMultisig2=19]="InitializeMultisig2",e[e.InitializeMint2=20]="InitializeMint2",e[e.GetAccountDataSize=21]="GetAccountDataSize",e[e.InitializeImmutableOwner=22]="InitializeImmutableOwner",e[e.AmountToUiAmount=23]="AmountToUiAmount",e[e.UiAmountToAmount=24]="UiAmountToAmount",e[e.InitializeMintCloseAuthority=25]="InitializeMintCloseAuthority",e[e.TransferFeeExtension=26]="TransferFeeExtension",e[e.ConfidentialTransferExtension=27]="ConfidentialTransferExtension",e[e.DefaultAccountStateExtension=28]="DefaultAccountStateExtension",e[e.Reallocate=29]="Reallocate",e[e.MemoTransferExtension=30]="MemoTransferExtension",e[e.CreateNativeMint=31]="CreateNativeMint",e[e.InitializeNonTransferableMint=32]="InitializeNonTransferableMint",e[e.InterestBearingMintExtension=33]="InterestBearingMintExtension"}(i||(i={}))},9924:function(e,t,n){n.d(t,{lZ:function(){return o},p0:function(){return u}});var i,r=n(52466),a=n(78200);n(795).Buffer;!function(e){e[e.Uninitialized=0]="Uninitialized",e[e.Initialized=1]="Initialized",e[e.Frozen=2]="Frozen"}(i||(i={}));const u=(0,r.struct)([(0,a.ZL)("mint"),(0,a.ZL)("owner"),(0,a.AW)("amount"),(0,r.u32)("delegateOption"),(0,a.ZL)("delegate"),(0,r.u8)("state"),(0,r.u32)("isNativeOption"),(0,a.AW)("isNative"),(0,a.AW)("delegatedAmount"),(0,r.u32)("closeAuthorityOption"),(0,a.ZL)("closeAuthority")]),o=u.span},68598:function(e,t,n){n.d(t,{Am:function(){return S},MO:function(){return b},ih:function(){return M}});var i,r=n(52466),a=n(78200),u=n(43231),o=n(41300);class s extends Error{constructor(e){super(e)}}class c extends s{constructor(){super(...arguments),this.name="TokenAccountNotFoundError"}}class m extends s{constructor(){super(...arguments),this.name="TokenInvalidAccountOwnerError"}}class l extends s{constructor(){super(...arguments),this.name="TokenInvalidAccountSizeError"}}class d extends s{constructor(){super(...arguments),this.name="TokenInvalidMintError"}}class p extends s{constructor(){super(...arguments),this.name="TokenOwnerOffCurveError"}}!function(e){e[e.Uninitialized=0]="Uninitialized",e[e.Mint=1]="Mint",e[e.Account=2]="Account"}(i||(i={}));var g=n(9924);const y=(0,r.struct)([(0,r.u8)("m"),(0,r.u8)("n"),(0,a.Xg)("isInitialized"),(0,a.ZL)("signer1"),(0,a.ZL)("signer2"),(0,a.ZL)("signer3"),(0,a.ZL)("signer4"),(0,a.ZL)("signer5"),(0,a.ZL)("signer6"),(0,a.ZL)("signer7"),(0,a.ZL)("signer8"),(0,a.ZL)("signer9"),(0,a.ZL)("signer10"),(0,a.ZL)("signer11")]),h=y.span;var f=n(795).Buffer;const w=(0,r.struct)([(0,r.u32)("mintAuthorityOption"),(0,a.ZL)("mintAuthority"),(0,a.AW)("supply"),(0,r.u8)("decimals"),(0,a.Xg)("isInitialized"),(0,r.u32)("freezeAuthorityOption"),(0,a.ZL)("freezeAuthority")]),A=w.span;async function M(e,t,n,r=o.H_){return function(e,t,n=o.H_){if(!t)throw new c;if(!t.owner.equals(n))throw new m;if(t.data.length<A)throw new l;const r=w.decode(t.data.slice(0,A));let a=f.alloc(0);if(t.data.length>A){if(t.data.length<=g.lZ)throw new l;if(t.data.length===h)throw new l;if(t.data[g.lZ]!=i.Mint)throw new d;a=t.data.slice(g.lZ+1)}return{address:e,mintAuthority:r.mintAuthorityOption?r.mintAuthority:null,supply:r.supply,decimals:r.decimals,isInitialized:r.isInitialized,freezeAuthority:r.freezeAuthorityOption?r.freezeAuthority:null,tlvData:a}}(t,await e.getAccountInfo(t,n),r)}async function S(e,t,n=!1,i=o.H_,r=o._u){if(!n&&!u.PublicKey.isOnCurve(t.toBuffer()))throw new p;const[a]=await u.PublicKey.findProgramAddress([t.toBuffer(),i.toBuffer(),e.toBuffer()],r);return a}function b(e,t,n=!1,i=o.H_,r=o._u){if(!n&&!u.PublicKey.isOnCurve(t.toBuffer()))throw new p;const[a]=u.PublicKey.findProgramAddressSync([t.toBuffer(),i.toBuffer(),e.toBuffer()],r);return a}}}]);
//# sourceMappingURL=2926-97684f1119d6c015.js.map